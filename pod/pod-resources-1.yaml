apiVersion: v1
kind: Pod
metadata:
  name: pod-resources
spec:
  containers:
  - name: web
    image: dockerproxy.net/library/nginx:1.23.1
    resources:
      requests:
        memory: "64Mi"
        cpu: "250m"
      limits:
        memory: "128Mi"
        cpu: "500m"

# 进入pod进行压测
# kubectl exec -it pod-resources -- bash

# 更新软件源
# root@pod-resources:/# apt update
# Get:1 http://deb.debian.org/debian bullseye InRelease [116 kB]
# Get:2 http://deb.debian.org/debian-security bullseye-security InRelease [27.2 kB]
# Get:3 http://deb.debian.org/debian bullseye-updates InRelease [44.1 kB]
# Get:4 http://deb.debian.org/debian bullseye/main amd64 Packages [8066 kB]
# Get:5 http://deb.debian.org/debian-security bullseye-security/main amd64 Packages [358 kB]
# Get:6 http://deb.debian.org/debian bullseye-updates/main amd64 Packages [18.8 kB]
# Fetched 8630 kB in 35s (250 kB/s)
# Reading package lists... Done
# Building dependency tree... Done
# Reading state information... Done
# 51 packages can be upgraded. Run 'apt list --upgradable' to see them.

# 安装压测工具
# root@pod-resources:/# apt install stress -y
# Reading package lists... Done
# Building dependency tree... Done
# Reading state information... Done
# The following NEW packages will be installed:
#   stress
# 0 upgraded, 1 newly installed, 0 to remove and 51 not upgraded.
# Need to get 22.0 kB of archives.
# After this operation, 55.3 kB of additional disk space will be used.
# Get:1 http://deb.debian.org/debian bullseye/main amd64 stress amd64 1.0.4-7 [22.0 kB]
# Fetched 22.0 kB in 1s (42.9 kB/s)
# debconf: delaying package configuration, since apt-utils is not installed
# Selecting previously unselected package stress.
# (Reading database ... 7823 files and directories currently installed.)
# Preparing to unpack .../stress_1.0.4-7_amd64.deb ...
# Unpacking stress (1.0.4-7) ...
# Setting up stress (1.0.4-7) ...

# 开始压测
# root@pod-resources:/# stress -c 6
# stress: info: [321] dispatching hogs: 6 cpu, 0 io, 0 vm, 0 hdd


# 查看资源使用情况，会发现CPU和内存使用量会飙升。但不会导致系统崩溃，因为Pod的资源限制已经限制了Pod的资源使用量1G，它会始终低于1G。
# # kubectl top pod
# NAME                                      CPU(cores)   MEMORY(bytes)
# pod-resources                             891m         41Mi
