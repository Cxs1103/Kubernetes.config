apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: artifactory-pvc
  namespace: kube-ops
  annotations:
    volume.beta.kubernetes.io/storage-class: "artifactory-data"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: artifactory
  name: artifactory
  namespace: kube-ops
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: artifactory
  template:
    metadata:
      labels:
        k8s-app: artifactory
      namespace: kube-ops
      name: artifactory
    spec:
      containers:
        - name: artifactory
          image: docker.bintray.io/jfrog/artifactory-oss:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
              name: web
              protocol: TCP
          resources:
            limits:
              cpu: 2000m
              memory: 4Gi
            requests:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: artifactory-data
              mountPath: /var/opt/jfrog/artifactory
      volumes:
        - name: artifactory-data
          persistentVolumeClaim:
            claimName: artifactory-data
---
apiVersion: v1
kind: Service
metadata:
 name: artifactory
 namespace: kube-ops
 labels:
   k8s-app: artifactory
spec:
 selector:
   k8s-app: artifactory
 ports:
 - name: web
   port: 8081
   targetPort: 8081
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: artifactory
  namespace: kube-ops
spec:
  rules:
  - host: artifactory.mieken.cn
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: artifactory
            port:
              number: 8081
  ingressClassName: nginx #新增特性
---
# 新版本新增 IngressClass
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
  name: nginx
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: k8s.io/ingress-nginx